{"version":3,"file":"lit-service-status-component.js","sourceRoot":"","sources":["src/lit-service-status-component.ts"],"names":[],"mappings":";;;;;;AAAA,uDAAuD;AACvD,uDAAuD;AACvD,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,UAAU;IAA7C;;QA8BE,eAAU,GAAI,QAAQ,CAAC;QAEvB,eAAU,GAAI,QAAQ,CAAC;QAEvB,gBAAW,GAAI,SAAS,CAAC;QAEzB,gBAAW,GAAI,OAAO,CAAC;QAEvB,iBAAY,GAAI,KAAK,CAAC;IAgCxB,CAAC;IA7BC,KAAK,CAAC,gBAAgB;QAEpB,IAAI;YACF,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;gBACrB,OAAO,EAAE;oBACP,MAAM,EAAE,kBAAkB;oBAC1B,MAAM,EAAG,EAAE;iBACZ;aACF,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;SAC5D;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAGQ,MAAM;QACb,OAAO,IAAI,CAAA;0BACW,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;UACrD,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;;KAE9D,CAAC;IACJ,CAAC;CAGF,CAAA;AArEiB,oBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;GAsB1B,CAAA;AAGF;IADC,QAAQ,EAAE;iDACS;AAEpB;IADC,QAAQ,EAAE;6CACK;AAEhB;IADC,QAAQ,EAAE;iDACY;AAEvB;IADC,QAAQ,EAAE;iDACY;AAEvB;IADC,QAAQ,EAAE;kDACc;AAEzB;IADC,QAAQ,EAAE;kDACY;AAEvB;IADC,QAAQ,EAAE;mDACW;AAtCX,aAAa;IADzB,aAAa,CAAC,8BAA8B,CAAC;GACjC,aAAa,CAsEzB;SAtEY,aAAa","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-var-requires */\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('lit-service-status-component')\r\nexport class StatusElement extends LitElement {\r\n  static override styles = css`\r\n    :host {\r\n      display: block;\r\n    }\r\n\r\n    .label {\r\n      font-weight: bold;\r\n      border-radius: 1em;\r\n      padding: 0.5em;\r\n      color: white;\r\n      width: 100px;\r\n      text-align: center;\r\n      font-family: 'Fira Sans', sans-serif;\r\n    }\r\n\r\n    .label {\r\n      background-color: green;\r\n    }\r\n\r\n    .label.offline {\r\n      background-color: red;\r\n    }\r\n  `;\r\n\r\n  @property()\r\n  apiToCheck!: string;\r\n  @property()\r\n  status!: string;\r\n  @property()\r\n  statusText? = 'Status';\r\n  @property()\r\n  onlineText? = 'Online';\r\n  @property()\r\n  offlineText? = 'Offline';\r\n  @property()\r\n  onlineColor? = 'green';\r\n  @property()\r\n  offlineColor? = 'red';\r\n \r\n\r\n  async getServiceStatus() {\r\n\r\n    try {\r\n      fetch(this.apiToCheck, {\r\n        headers: {\r\n          Accept: 'application/json',\r\n          apiKey:  '',\r\n        },\r\n      }).then((response) => (this.status = response.statusText));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  override connectedCallback(){\r\n    super.connectedCallback();\r\n    this.getServiceStatus();\r\n  }\r\n\r\n\r\n  override render() {\r\n    return html`\r\n      <div class=\"label ${this.status === 'OK' ? '' : 'offline'}\">\r\n        ${this.status === 'OK' ? this.onlineText : this.offlineText}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'lit-service-status-component': StatusElement;\r\n  }\r\n}\r\n"]}